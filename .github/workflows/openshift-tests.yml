---

on:
  issue_comment:
    types:
      - created
jobs:
  check-imagestreams:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      statuses: write
    if: |
      github.event.issue.pull_request
      && (contains(github.event.comment.body, '[test-openshift]') || contains(github.event.comment.body, '[test-all]'))
      && contains(fromJson('["OWNER", "MEMBER"]'), github.event.comment.author_association)
    steps:
      - uses: sclorg/ci-scripts/ocp-stream-generator@master
        with:
          ref: "refs/pull/${{ github.event.issue.number }}/head"

  distgen-check:
    name: "Check distgen generated files"
    runs-on: ubuntu-latest
    needs: check-imagestreams
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ref: "refs/pull/${{ github.event.issue.number }}/head"
          submodules: true

      - name: Check distgen generated files
        id: check
        shell: bash
        run: |
          sudo apt update && sudo apt -y install python3-pip
          pip3 install pyyaml distgen Jinja2
          result="success"
          ./common/tests/check_distgen_generated_files.sh

  openshift-tests:
    needs: distgen-check
    name: "${{ matrix.test_case }} tests: ${{ matrix.version }} - ${{ matrix.os_test }}"
    runs-on: ubuntu-latest
    concurrency:
      group: ocp-${{ github.event.issue.number }}-${{ matrix.version }}-${{ matrix.os_test }}
      cancel-in-progress: true
    strategy:
      fail-fast: false
      matrix:
        version: [ "3.8", "3.9", "3.11", "3.12" ]
        os_test: [ "rhel8", "rhel9", "rhel10" ]
        test_case: [ "openshift-4" ]

    if: |
      github.event.issue.pull_request
      && (contains(github.event.comment.body, '[test-openshift]') || contains(github.event.comment.body, '[test-all]'))
      && contains(fromJson('["OWNER", "MEMBER"]'), github.event.comment.author_association)
    steps:
      - uses: sclorg/tfaga-wrapper@main
        with:
          os_test: ${{ matrix.os_test }}
          version: ${{ matrix.version }}
          test_case: ${{ matrix.test_case }}
          public_api_key: ${{ secrets.TF_PUBLIC_API_KEY }}
          private_api_key: ${{ secrets.TF_INTERNAL_API_KEY }}
...
